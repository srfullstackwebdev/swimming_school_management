# Connection URL for Mongoose
# See https://mongoosejs.com/docs/index.html
DATABASE_CONNECTION = "mongodb://root:77_WqhGZXF@35.223.39.196:27017/?authMechanism=DEFAULT&directConnection=true/development"

# In case you want to use ACID transactions, follow this doc:
# https://mongoosejs.com/docs/transactions.html
DATABASE_TRANSACTIONS = false

# Enable/Disable Swagger UI API Documentation
API_DOCUMENTATION_ENABLED = true

# Tenant Mode
# multi: Allow new users to create new tenants.
# multi-with-subdomain: Same as multi, but enable access to the tenant via subdomain.
# single: One tenant, the first user to register will be the admin.
TENANT_MODE = "multi"

# Secret used to Sign the JWT (Authentication) tokens.
AUTH_JWT_SECRET = "dbf043cc-7fb1-4f73-9840-74ddf4fd8935"

# How long the JWT (Authentication) token takes to expire.
AUTH_JWT_EXPIRES_IN = "7 days"

# Configuration to allow email sending used on:
# backend/src/services/emailSender.js
SENDGRID_EMAIL_FROM = ""
SENDGRID_KEY = ""
SENDGRID_TEMPLATE_EMAIL_ADDRESS_VERIFICATION = ""
SENDGRID_TEMPLATE_INVITATION = ""
SENDGRID_TEMPLATE_PASSWORD_RESET = ""

# Frontend Url.
# Ex.: http://localhost:<port>
FRONTEND_URL = "http://localhost:<port>"

# Frontend URL with the subdomain for tenants.
# Works only for tenantMode=multi-with-subdomain
# Please use the variable [subdomain] on this URL.
FRONTEND_URL_WITH_SUBDOMAIN = "http://[subdomain].localhost:<port>"

# Backend URL with /api
# Ex.: http://localhost:8080/api
BACKEND_URL = "http://localhost:8080/api"

# Plan payments configuration
PLAN_STRIPE_SECRET_KEY = ""
PLAN_STRIPE_WEBHOOK_SIGNING_SECRET = ""
PLAN_STRIPE_PRICES_GROWTH = ""
PLAN_STRIPE_PRICES_ENTERPRISE = ""

# File Storage Provider
# localhost
# gcp (Google Cloud Platform)
# aws (Amazon Web Services)
FILE_STORAGE_PROVIDER = "localhost"
FILE_STORAGE_PATH = "{APP_ROOT}/uploads"

# Bucket used for file storage
# Only for GCP and AWS
FILE_STORAGE_BUCKET = ""

# Only needed if using gcp as the File storage provider
# If you are deploying on Google Cloud environment, you don't need to set this variable,
# because the configs will be fetch from the platform
GOOGLE_CLOUD_PLATFORM_CREDENTIALS = ""

# Only needed if using aws as the File storage provider
AWS_ACCESS_KEY_ID = ""
AWS_SECRET_ACCESS_KEY = ""
AWS_REGION=""

# OAuth Social Sign-in/Sign-up
AUTH_SOCIAL_GOOGLE_CLIENT_ID = ""
AUTH_SOCIAL_GOOGLE_CLIENT_SECRET = ""
AUTH_SOCIAL_GOOGLE_CALLBACK_URL = "http://localhost:8080/api/auth/social/google/callback"

AUTH_SOCIAL_FACEBOOK_CLIENT_ID = ""
AUTH_SOCIAL_FACEBOOK_CLIENT_SECRET = ""
AUTH_SOCIAL_FACEBOOK_CALLBACK_URL = "http://localhost:8080/api/auth/social/facebook/callback"

# Type Form Parameters
TYPE_FORM = true
TYPE_FORM_URL = "https://api.typeform.com"
TYPE_FORM_ID = "G7b7ZDFa"
TYPE_FORM_API_TOKEN = "tfp_6q7q94PETEAPod3tRhqdcwo6UUPznB2T6sMpDhB1rnwc_3mJr74CXve2W7m"
